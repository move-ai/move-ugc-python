name: Release

# Run on every version tag (0.1.0, 0.1.1 and so on)
on:
  push:
    tags:
      - "*"


jobs:
#  publish:
#    name: "Publish ${{ github.ref_name }}"
#    runs-on: "ubuntu-latest"
#    environment: Production
#    permissions:
#      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing
#      contents: read
#    steps:
#      - name: Checkout Repository
#        uses: actions/checkout@v4
#      - name: Set up python and dependencies
#        uses: ./.github/actions/base-python
#        with:
#          version: "3.10"
#      - name: Build dist/**
#        run: |
#          poetry build
#      - name: Publish to PyPI
#        # By default, this action will publish to PyPI from `.dist/*` path.
#        # We don't need to specific any API tokens here since trusted publishing is set up
#        # See https://docs.pypi.org/trusted-publishers/using-a-publisher/
#        uses: pypa/gh-action-pypi-publish@release/v1


  integration_tests:
    strategy:
      fail-fast: false
      matrix:
        python-version: [ '3.8', '3.9', '3.10', '3.11' ]
        test_name: ["create_volume_with_human"]
    runs-on: ubuntu-latest
    name: Integration tests ${{ matrix.python-version }}
    steps:
      - name: Run test suite
        uses: move-ai/move-services-testing/.github/actions/ugc-python@main
        with:
          test-name: ${{ matrix.test_name }}
          api-key: ${{ secrets.API_KEY_QA_CLIENT_DEFAULT }}
          endpoint-url: ${{ secrets.UGC_API_ENDPOINT_URL }}
          python-version: ${{ matrix.python-version }}
          rev: ${{ github.ref_name }}

#  release:
#    name: "Release ${{ github.ref_name }}"
#    runs-on: "ubuntu-latest"
#    needs:
#      - integration_tests
#    steps:
#      - name: Checkout Repository
#        uses: actions/checkout@v4
#      - name: Set up python and dependencies
#        uses: ./.github/actions/base-python
#        with:
#          version: "3.10"
#          groups: "docs"
#      - name: Configure git user for mike
#        run: |
#          git fetch origin gh-pages --depth=1
#          git config --local user.email "github-actions[bot]@users.noreply.github.com"
#          git config --local user.name "github-actions[bot]"
#      - name: Target latest docs to ${{ github.ref_name }}
#        run: |
#          poetry run mike deploy --push --update-aliases ${{ github.ref_name }} latest